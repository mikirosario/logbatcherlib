Changelog

Version 0.1 - 0.5:

- Cached logs are now correctly saved to disk when a Logger instance closes.

- Relative log folder paths are now generated in the executable's directory rather than the
directory from which the executable was launched.

- Maximum size of a log file raised to 500 MB.

Version 0.6

- Absolute log folder paths may now be specified.

- Error messages are now shown in red while warnings are shown in yellow.

- LogFilePath maximum length raised to 200 characters.

- Added this Changelog.

Version 0.7

- The 'Log' method no longer logs to console, only to file.

- New 'LogConsole' method added that only logs to console.

- The 'Log' method no longer prepends a timestamp to logs.

- The new method 'AffixTimestamp' offers the possibility of prepending a timestamp to a log.

- Mutexes are used to lock file access to a single Logger instance at a time. If two or more Logger
instances try to access the same files at the same time, even from different processes, all but one
will fail and print an error message to console.

- Logger now implements IDisposable and can be called with a using() block.

- AutoResetEvents resources are now explicitly freed.

- Logger console messages now homogenized and prepended with [LogBatcher] to indicate their origin.

- Objects can now be serialized to and logged as JSON strings, with optional default or null value
suppression.

- Logs in proper JSON string format can now be deserialized to a compatible wrapper class.

- All logs, or only JSON logs, can now be deleted from disk after being read from file.

- All Logger exceptions are now handled with an error message written to the console.

- All log files now have the extension .log and are numbered starting at 1 in the format: logs.log,
logs1.log, logs2.log, etc.

Version 0.701

- If Logger is instantiated with a null value for 'loggerName', it will use the default name rather
than printing an error.

Version 0.8

- Renamed ReadAllDeserializedJsonLogs and ReadAndDeleteAllDeserializedJsonLogs methods to
ReadAndDeserializeAllJsonLogs and ReadDeserializeAndDeleteAllJsonLogs.

- New ReadAllJsonLogs and ReadAndDeleteAllJsonLogs methods will operate on logs without
deserializing them.

- Handy new enumerable property AllJsonLogs for read-only operations.

- New CountLogs and CountJsonLogs will count all logs in the Logger-associated files. This ain't
cheap, so it should be done once, and the user should keep track of log additions and deletions
from there.

Version 0.9

- Major refactor of file reading operation to consolidate the code for code maintenance reasons.
Some breaking changes introduced.

- CountLogs and CountJsonLogs operations now use the file operation lock. They cannot be used
while iterating over logs. Might implement separate writeLock later so this only applies to
iterations with potential file write or delete operations.

- User can now limit the maximum number of logs to be retrieved from files for batched retrieval.
